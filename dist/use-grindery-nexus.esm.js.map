{"version":3,"file":"use-grindery-nexus.esm.js","sources":["../src/index.tsx"],"sourcesContent":["import React, { useState, useEffect, createContext, useContext } from 'react';\n// @ts-ignore\nimport Web3Modal from 'web3modal';\n// @ts-ignore\nimport { providers } from 'ethers';\n// @ts-ignore\nimport { encode } from 'universal-base64url';\n\nexport const ENGINE_URL = 'https://orchestrator.grindery.org';\n\n// Authentication token object definition\nexport type AuthToken = {\n  access_token: string;\n  expires_in: number;\n  refresh_token: string;\n  token_type: string;\n};\n\n// Context properties definition\nexport type GrinderyNexusContextProps = {\n  /** User ID. Reference: https://github.com/ChainAgnostic/CAIPs/blob/master/CAIPs/caip-10.md */\n  user: string | null;\n\n  /** Authentication token object */\n  token: AuthToken | null;\n\n  /** User wallet address  */\n  address: string | null;\n\n  /** User chain id  */\n  chain: number | null;\n\n  /** Authorization code */\n  code: string | null;\n\n  /** Connect user wallet */\n  connect: () => void;\n\n  /** Disconnect user wallet */\n  disconnect: () => void;\n\n  /** Set User ID  */\n  setUser: React.Dispatch<React.SetStateAction<string | null>>;\n\n  /** Set user wallet address  */\n  setAddress: React.Dispatch<React.SetStateAction<string | null>>;\n\n  /** Set user chain id  */\n  setChain: React.Dispatch<React.SetStateAction<number | null>>;\n};\n\nexport type GrinderyNexusContextProviderProps = {\n  children: React.ReactNode;\n\n  /** Automatically authenticate user */\n  cacheProvider?: boolean;\n};\n\n// Default context properties\nconst defaultContext = {\n  user: null,\n  address: null,\n  chain: null,\n  token: null,\n  code: null,\n  connect: () => {},\n  disconnect: () => {},\n  setUser: () => {},\n  setAddress: () => {},\n  setChain: () => {},\n};\n\n/** Grindery Nexus Context */\nexport const GrinderyNexusContext = createContext<GrinderyNexusContextProps>(\n  defaultContext\n);\n\n/** Grindery Nexus Context Provider */\nexport const GrinderyNexusContextProvider = (\n  props: GrinderyNexusContextProviderProps\n) => {\n  const children = props.children;\n  const cacheProvider =\n    typeof props.cacheProvider !== 'undefined' ? props.cacheProvider : true;\n\n  // Web3Modal instance\n  const [web3Modal, setWeb3Modal] = useState<any>(null);\n\n  // Web3Provider library\n  const [library, setLibrary] = useState<any>(null);\n\n  // User account\n  const [account, setAccount] = useState<string | null>(null);\n\n  // User id\n  const [user, setUser] = useState<string | null>(null);\n\n  // User wallet address\n  const [address, setAddress] = useState<string | null>(null);\n\n  // User chain id\n  const [chain, setChain] = useState<number | null>(null);\n\n  // Auth message\n  const [message, setMessage] = useState<string | null>(null);\n\n  // Authentication token object\n  const [token, setToken] = useState<AuthToken | null>(null);\n\n  // Signed authentication message\n  const [signature, setSignature] = useState<string | null>(null);\n\n  // Compiled authorization code\n  const code =\n    (message &&\n      signature &&\n      encode(\n        JSON.stringify({\n          message: message,\n          signature: signature,\n        })\n      )) ||\n    null;\n\n  // Subscribe to account change\n  const addListeners = async (web3ModalProvider: any) => {\n    web3ModalProvider.on('accountsChanged', () => {\n      window.location.reload();\n    });\n  };\n\n  // Connect MetaMask wallet\n  const connect = async () => {\n    const provider = await web3Modal.connect();\n    addListeners(provider);\n    const ethersProvider = new providers.Web3Provider(provider);\n    const userAddress = await ethersProvider.getSigner().getAddress();\n    const userChain = await ethersProvider.getSigner().getChainId();\n    const accounts = await ethersProvider.listAccounts();\n    setLibrary(ethersProvider);\n    if (accounts) setAccount(accounts[0]);\n    setAddress(userAddress);\n    setChain(userChain);\n  };\n\n  // Clear user state\n  const clearUserState = () => {\n    setUser(null);\n    setAddress(null);\n    setChain(null);\n    setAccount(null);\n    setMessage(null);\n    setToken(null);\n    setSignature(null);\n  };\n\n  // Disconnect user\n  const disconnect = async () => {\n    await web3Modal.clearCachedProvider();\n    clearUserState();\n    clearAuthSession();\n  };\n\n  // Fetch authentication message or access token from the engine API\n  const startSession = async (userAddress: string) => {\n    // Try to fetch access token\n    const resWithCreds = await fetch(\n      `${ENGINE_URL}/oauth/session?address=${userAddress}`,\n      {\n        method: 'GET',\n        credentials: 'include',\n      }\n    ); /*.catch(async err => {\n      // If CORS error then fetch auth message\n      console.error('startSessionWithCreds error', err.message);\n      const res = await fetch(\n        `${ENGINE_URL}/oauth/session?address=${userAddress}`,\n        {\n          method: 'GET',\n        }\n      );\n\n      if (res && res.ok) {\n        let json = await res.json();\n        setMessage(json.message || null);\n      } else {\n        console.error(\n          'startSession error',\n          (res && res.status) || 'Unknown error'\n        );\n      }\n    });*/\n\n    if (resWithCreds && resWithCreds.ok) {\n      let json = await resWithCreds.json();\n\n      // Set access token if exists\n      if (json.access_token) {\n        setToken(json);\n      } else if (json.message) {\n        // Or set auth message\n        setMessage(json.message);\n      }\n    } else {\n      console.error(\n        'startSessionWithCreds error',\n        (resWithCreds && resWithCreds.status) || 'Unknown error'\n      );\n    }\n  };\n\n  // Sign authentication message with MetaMask\n  const signMessage = async (lib: any, msg: string, userAccount: string) => {\n    if (!web3Modal) return;\n    try {\n      const newSignature = await lib.provider.request({\n        method: 'personal_sign',\n        params: [msg, userAccount],\n      });\n      setSignature(newSignature);\n    } catch (error) {\n      console.error('signMessage error', error);\n      clearUserState();\n    }\n  };\n\n  // Get access token from the engine API\n  const getToken = async (code: string) => {\n    const res = await fetch(`${ENGINE_URL}/oauth/token?code=${code}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        grant_type: 'authorization_code',\n      }),\n    });\n\n    if (res.ok) {\n      let result = await res.json();\n      setToken(result);\n    } else {\n      console.error('getToken error', res.status);\n      clearUserState();\n    }\n  };\n\n  // Set refresh_token cookie\n  const registerAuthSession = async (refresh_token: string) => {\n    const res = await fetch(`${ENGINE_URL}/oauth/session-register`, {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        refresh_token: refresh_token,\n      }),\n    });\n\n    if (!res.ok) {\n      console.error('registerAuthSession error', res.status);\n    }\n  };\n\n  // Remove refresh_token cookie\n  const clearAuthSession = async () => {\n    const res = await fetch(`${ENGINE_URL}/oauth/session-register`, {\n      method: 'POST',\n      credentials: 'include',\n    });\n\n    if (!res.ok) {\n      console.error('clearAuthSession error', res.status);\n    }\n  };\n\n  // Set web3Modal instance\n  useEffect(() => {\n    const providerOptions = {};\n    const newWeb3Modal = new Web3Modal({\n      cacheProvider: cacheProvider,\n      network: 'mainnet',\n      providerOptions,\n    });\n    setWeb3Modal(newWeb3Modal);\n  }, []);\n\n  // connect automatically and without a popup if user was connected before\n  useEffect(() => {\n    if (web3Modal && web3Modal.cachedProvider) {\n      connect();\n    }\n  }, [web3Modal]);\n\n  // set user if token and address is known\n  useEffect(() => {\n    if (address && token && token.access_token) {\n      setUser(`eip155:1:${address}`);\n      if (token.refresh_token) {\n        registerAuthSession(token.refresh_token);\n      }\n    } else {\n      setUser(null);\n    }\n  }, [token, address]);\n\n  // Start session if user address is known\n  useEffect(() => {\n    if (address && !message && !signature && !token) {\n      startSession(address);\n    }\n  }, [address, message, signature, token]);\n\n  // Sign authentication message if message is known\n  useEffect(() => {\n    if (library && message && account && !signature && !token) {\n      signMessage(library, message, account);\n    }\n  }, [library, message, account, signature, token]);\n\n  // Get authentication token if message is signed\n  useEffect(() => {\n    if (code && !token) {\n      getToken(code);\n    }\n  }, [code, token]);\n\n  return (\n    <GrinderyNexusContext.Provider\n      value={{\n        user,\n        address,\n        chain,\n        token,\n        code,\n        connect,\n        disconnect,\n        setUser,\n        setAddress,\n        setChain,\n      }}\n    >\n      {children}\n    </GrinderyNexusContext.Provider>\n  );\n};\n\n/** Grindery Nexus Hook */\nexport const useGrinderyNexus = () => useContext(GrinderyNexusContext);\n\nexport default GrinderyNexusContextProvider;\n"],"names":["ENGINE_URL","defaultContext","user","address","chain","token","code","connect","disconnect","setUser","setAddress","setChain","GrinderyNexusContext","createContext","GrinderyNexusContextProvider","props","children","cacheProvider","useState","web3Modal","setWeb3Modal","library","setLibrary","account","setAccount","message","setMessage","setToken","signature","setSignature","encode","JSON","stringify","addListeners","web3ModalProvider","on","window","location","reload","provider","ethersProvider","providers","Web3Provider","getSigner","getAddress","userAddress","getChainId","userChain","listAccounts","accounts","clearUserState","clearCachedProvider","clearAuthSession","startSession","fetch","method","credentials","resWithCreds","ok","json","access_token","console","error","status","signMessage","lib","msg","userAccount","request","params","newSignature","getToken","headers","body","grant_type","res","result","registerAuthSession","refresh_token","useEffect","providerOptions","newWeb3Modal","Web3Modal","network","cachedProvider","React","Provider","value","useGrinderyNexus","useContext"],"mappings":"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"}